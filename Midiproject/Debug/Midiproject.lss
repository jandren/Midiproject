
Midiproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800200  00000354  000003e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000354  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000502  00800204  00800204  000003ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003ec  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000056d  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000023e  00000000  00000000  00000a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007e3  00000000  00000000  00000c7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000180  00000000  00000000  00001464  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00008afe  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000044f  00000000  00000000  0000a0e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  0000a531  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000035e9  00000000  00000000  0000a5c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	6e c1       	rjmp	.+732    	; 0x33a <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	7c c0       	rjmp	.+248    	; 0x15e <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	3d c1       	rjmp	.+634    	; 0x2f0 <__vector_29>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e5       	ldi	r30, 0x54	; 84
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 30       	cpi	r26, 0x04	; 4
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	27 e0       	ldi	r18, 0x07	; 7
 110:	a4 e0       	ldi	r26, 0x04	; 4
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 30       	cpi	r26, 0x06	; 6
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	ae d0       	rcall	.+348    	; 0x27c <main>
 120:	17 c1       	rjmp	.+558    	; 0x350 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <REC_add>:
	
}

void REC_add(uint8_t command, uint8_t tone){
	
	com[rec_index]  = command;
 124:	90 91 04 02 	lds	r25, 0x0204
 128:	29 2f       	mov	r18, r25
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	f9 01       	movw	r30, r18
 12e:	ea 5f       	subi	r30, 0xFA	; 250
 130:	fd 4f       	sbci	r31, 0xFD	; 253
 132:	80 83       	st	Z, r24
	tones[rec_index] = tone;
 134:	f9 01       	movw	r30, r18
 136:	ea 5f       	subi	r30, 0xFA	; 250
 138:	fc 4f       	sbci	r31, 0xFC	; 252
 13a:	60 83       	st	Z, r22
	vol[rec_index] = volume;
 13c:	80 91 00 02 	lds	r24, 0x0200
 140:	f9 01       	movw	r30, r18
 142:	ea 5f       	subi	r30, 0xFA	; 250
 144:	f9 4f       	sbci	r31, 0xF9	; 249
 146:	80 83       	st	Z, r24
	time[rec_index] = 0; //time_read();
 148:	f9 01       	movw	r30, r18
 14a:	ee 0f       	add	r30, r30
 14c:	ff 1f       	adc	r31, r31
 14e:	ea 5f       	subi	r30, 0xFA	; 250
 150:	fb 4f       	sbci	r31, 0xFB	; 251
 152:	11 82       	std	Z+1, r1	; 0x01
 154:	10 82       	st	Z, r1
	
	rec_index++;	
 156:	9f 5f       	subi	r25, 0xFF	; 255
 158:	90 93 04 02 	sts	0x0204, r25
 15c:	08 95       	ret

0000015e <__vector_25>:
void init_Timer0(void)
{
	TCCR0A = 0b00000000;			// normal mode
	TCCR0B = 0b00000101;			// prescaler 1024
	TCNT0 = 0;						// overflow, 255*1024/(8*10^6) = 32.6ms delay at max
	TIMSK0 |= (1 << TOIE0);			// enable overflow interrupt enable 
 15e:	1f 92       	push	r1
 160:	0f 92       	push	r0
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	0f 92       	push	r0
 166:	11 24       	eor	r1, r1
 168:	8f 93       	push	r24
 16a:	9f 93       	push	r25
 16c:	80 91 c6 00 	lds	r24, 0x00C6
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	90 93 02 02 	sts	0x0202, r25
 176:	80 93 01 02 	sts	0x0201, r24
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <UART_out>:
 188:	e0 ec       	ldi	r30, 0xC0	; 192
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	90 81       	ld	r25, Z
 18e:	95 ff       	sbrs	r25, 5
 190:	fd cf       	rjmp	.-6      	; 0x18c <UART_out+0x4>
 192:	80 93 c6 00 	sts	0x00C6, r24
 196:	08 95       	ret

00000198 <MIDI_send>:
 198:	cf 93       	push	r28
 19a:	c6 2f       	mov	r28, r22
 19c:	f5 df       	rcall	.-22     	; 0x188 <UART_out>
 19e:	8c 2f       	mov	r24, r28
 1a0:	f3 df       	rcall	.-26     	; 0x188 <UART_out>
 1a2:	80 91 00 02 	lds	r24, 0x0200
 1a6:	86 95       	lsr	r24
 1a8:	ef df       	rcall	.-34     	; 0x188 <UART_out>
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <Init_UART0>:
 1ae:	83 e3       	ldi	r24, 0x33	; 51
 1b0:	80 93 c4 00 	sts	0x00C4, r24
 1b4:	10 92 c5 00 	sts	0x00C5, r1
 1b8:	10 92 c0 00 	sts	0x00C0, r1
 1bc:	88 e9       	ldi	r24, 0x98	; 152
 1be:	80 93 c1 00 	sts	0x00C1, r24
 1c2:	86 e0       	ldi	r24, 0x06	; 6
 1c4:	80 93 c2 00 	sts	0x00C2, r24
 1c8:	08 95       	ret

000001ca <Init_ports>:
 1ca:	8f ef       	ldi	r24, 0xFF	; 255
 1cc:	84 b9       	out	0x04, r24	; 4
 1ce:	85 b9       	out	0x05, r24	; 5
 1d0:	1a b8       	out	0x0a, r1	; 10
 1d2:	8b b9       	out	0x0b, r24	; 11
 1d4:	08 95       	ret

000001d6 <MIDI_Conversion>:
 1d6:	90 91 05 02 	lds	r25, 0x0205
 1da:	93 70       	andi	r25, 0x03	; 3
 1dc:	88 30       	cpi	r24, 0x08	; 8
 1de:	49 f1       	breq	.+82     	; 0x232 <MIDI_Conversion+0x5c>
 1e0:	40 f4       	brcc	.+16     	; 0x1f2 <MIDI_Conversion+0x1c>
 1e2:	82 30       	cpi	r24, 0x02	; 2
 1e4:	c1 f0       	breq	.+48     	; 0x216 <MIDI_Conversion+0x40>
 1e6:	84 30       	cpi	r24, 0x04	; 4
 1e8:	e9 f0       	breq	.+58     	; 0x224 <MIDI_Conversion+0x4e>
 1ea:	81 30       	cpi	r24, 0x01	; 1
 1ec:	09 f0       	breq	.+2      	; 0x1f0 <MIDI_Conversion+0x1a>
 1ee:	44 c0       	rjmp	.+136    	; 0x278 <MIDI_Conversion+0xa2>
 1f0:	0b c0       	rjmp	.+22     	; 0x208 <MIDI_Conversion+0x32>
 1f2:	80 32       	cpi	r24, 0x20	; 32
 1f4:	61 f1       	breq	.+88     	; 0x24e <MIDI_Conversion+0x78>
 1f6:	18 f4       	brcc	.+6      	; 0x1fe <MIDI_Conversion+0x28>
 1f8:	80 31       	cpi	r24, 0x10	; 16
 1fa:	11 f1       	breq	.+68     	; 0x240 <MIDI_Conversion+0x6a>
 1fc:	3d c0       	rjmp	.+122    	; 0x278 <MIDI_Conversion+0xa2>
 1fe:	80 34       	cpi	r24, 0x40	; 64
 200:	69 f1       	breq	.+90     	; 0x25c <MIDI_Conversion+0x86>
 202:	80 38       	cpi	r24, 0x80	; 128
 204:	91 f1       	breq	.+100    	; 0x26a <MIDI_Conversion+0x94>
 206:	38 c0       	rjmp	.+112    	; 0x278 <MIDI_Conversion+0xa2>
 208:	89 2f       	mov	r24, r25
 20a:	88 0f       	add	r24, r24
 20c:	89 0f       	add	r24, r25
 20e:	88 0f       	add	r24, r24
 210:	88 0f       	add	r24, r24
 212:	80 5d       	subi	r24, 0xD0	; 208
 214:	08 95       	ret
 216:	89 2f       	mov	r24, r25
 218:	88 0f       	add	r24, r24
 21a:	89 0f       	add	r24, r25
 21c:	88 0f       	add	r24, r24
 21e:	88 0f       	add	r24, r24
 220:	8e 5c       	subi	r24, 0xCE	; 206
 222:	08 95       	ret
 224:	89 2f       	mov	r24, r25
 226:	88 0f       	add	r24, r24
 228:	89 0f       	add	r24, r25
 22a:	88 0f       	add	r24, r24
 22c:	88 0f       	add	r24, r24
 22e:	8c 5c       	subi	r24, 0xCC	; 204
 230:	08 95       	ret
 232:	89 2f       	mov	r24, r25
 234:	88 0f       	add	r24, r24
 236:	89 0f       	add	r24, r25
 238:	88 0f       	add	r24, r24
 23a:	88 0f       	add	r24, r24
 23c:	8b 5c       	subi	r24, 0xCB	; 203
 23e:	08 95       	ret
 240:	89 2f       	mov	r24, r25
 242:	88 0f       	add	r24, r24
 244:	89 0f       	add	r24, r25
 246:	88 0f       	add	r24, r24
 248:	88 0f       	add	r24, r24
 24a:	89 5c       	subi	r24, 0xC9	; 201
 24c:	08 95       	ret
 24e:	89 2f       	mov	r24, r25
 250:	88 0f       	add	r24, r24
 252:	89 0f       	add	r24, r25
 254:	88 0f       	add	r24, r24
 256:	88 0f       	add	r24, r24
 258:	87 5c       	subi	r24, 0xC7	; 199
 25a:	08 95       	ret
 25c:	89 2f       	mov	r24, r25
 25e:	88 0f       	add	r24, r24
 260:	89 0f       	add	r24, r25
 262:	88 0f       	add	r24, r24
 264:	88 0f       	add	r24, r24
 266:	85 5c       	subi	r24, 0xC5	; 197
 268:	08 95       	ret
 26a:	89 2f       	mov	r24, r25
 26c:	88 0f       	add	r24, r24
 26e:	89 0f       	add	r24, r25
 270:	88 0f       	add	r24, r24
 272:	88 0f       	add	r24, r24
 274:	84 5c       	subi	r24, 0xC4	; 196
 276:	08 95       	ret
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	08 95       	ret

0000027c <main>:
 27c:	a6 df       	rcall	.-180    	; 0x1ca <Init_ports>
 27e:	80 e8       	ldi	r24, 0x80	; 128
 280:	95 e2       	ldi	r25, 0x25	; 37
 282:	95 df       	rcall	.-214    	; 0x1ae <Init_UART0>
 284:	78 94       	sei
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	01 c0       	rjmp	.+2      	; 0x28c <main+0x10>
 28a:	2c 2f       	mov	r18, r28
 28c:	99 b1       	in	r25, 0x09	; 9
 28e:	c9 2f       	mov	r28, r25
 290:	c0 95       	com	r28
 292:	95 b9       	out	0x05, r25	; 5
 294:	92 2f       	mov	r25, r18
 296:	9c 27       	eor	r25, r28
 298:	89 2f       	mov	r24, r25
 29a:	8c 23       	and	r24, r28
 29c:	99 f0       	breq	.+38     	; 0x2c4 <main+0x48>
 29e:	d0 91 05 02 	lds	r29, 0x0205
 2a2:	dc 70       	andi	r29, 0x0C	; 12
 2a4:	d6 95       	lsr	r29
 2a6:	d6 95       	lsr	r29
 2a8:	d0 69       	ori	r29, 0x90	; 144
 2aa:	95 df       	rcall	.-214    	; 0x1d6 <MIDI_Conversion>
 2ac:	18 2f       	mov	r17, r24
 2ae:	80 91 05 02 	lds	r24, 0x0205
 2b2:	88 23       	and	r24, r24
 2b4:	1c f4       	brge	.+6      	; 0x2bc <main+0x40>
 2b6:	61 2f       	mov	r22, r17
 2b8:	8d 2f       	mov	r24, r29
 2ba:	34 df       	rcall	.-408    	; 0x124 <REC_add>
 2bc:	61 2f       	mov	r22, r17
 2be:	8d 2f       	mov	r24, r29
 2c0:	6b df       	rcall	.-298    	; 0x198 <MIDI_send>
 2c2:	e3 cf       	rjmp	.-58     	; 0x28a <main+0xe>
 2c4:	89 2f       	mov	r24, r25
 2c6:	82 23       	and	r24, r18
 2c8:	01 f3       	breq	.-64     	; 0x28a <main+0xe>
 2ca:	d0 91 05 02 	lds	r29, 0x0205
 2ce:	dc 70       	andi	r29, 0x0C	; 12
 2d0:	d6 95       	lsr	r29
 2d2:	d6 95       	lsr	r29
 2d4:	d0 69       	ori	r29, 0x90	; 144
 2d6:	7f df       	rcall	.-258    	; 0x1d6 <MIDI_Conversion>
 2d8:	18 2f       	mov	r17, r24
 2da:	80 91 05 02 	lds	r24, 0x0205
 2de:	88 23       	and	r24, r24
 2e0:	1c f4       	brge	.+6      	; 0x2e8 <main+0x6c>
 2e2:	61 2f       	mov	r22, r17
 2e4:	8d 2f       	mov	r24, r29
 2e6:	1e df       	rcall	.-452    	; 0x124 <REC_add>
 2e8:	61 2f       	mov	r22, r17
 2ea:	8d 2f       	mov	r24, r29
 2ec:	55 df       	rcall	.-342    	; 0x198 <MIDI_send>
 2ee:	cd cf       	rjmp	.-102    	; 0x28a <main+0xe>

000002f0 <__vector_29>:
 2f0:	1f 92       	push	r1
 2f2:	0f 92       	push	r0
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	0f 92       	push	r0
 2f8:	11 24       	eor	r1, r1
 2fa:	0b b6       	in	r0, 0x3b	; 59
 2fc:	0f 92       	push	r0
 2fe:	8f 93       	push	r24
 300:	9f 93       	push	r25
 302:	ef 93       	push	r30
 304:	ff 93       	push	r31
 306:	80 91 79 00 	lds	r24, 0x0079
 30a:	80 93 00 02 	sts	0x0200, r24
 30e:	ec e7       	ldi	r30, 0x7C	; 124
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	90 81       	ld	r25, Z
 314:	80 91 05 02 	lds	r24, 0x0205
 318:	8c 70       	andi	r24, 0x0C	; 12
 31a:	86 95       	lsr	r24
 31c:	86 95       	lsr	r24
 31e:	90 7e       	andi	r25, 0xE0	; 224
 320:	89 2b       	or	r24, r25
 322:	80 83       	st	Z, r24
 324:	ff 91       	pop	r31
 326:	ef 91       	pop	r30
 328:	9f 91       	pop	r25
 32a:	8f 91       	pop	r24
 32c:	0f 90       	pop	r0
 32e:	0b be       	out	0x3b, r0	; 59
 330:	0f 90       	pop	r0
 332:	0f be       	out	0x3f, r0	; 63
 334:	0f 90       	pop	r0
 336:	1f 90       	pop	r1
 338:	18 95       	reti

0000033a <__vector_23>:
}

ISR(TIMER0_OVF_vect)
{
 33a:	1f 92       	push	r1
 33c:	0f 92       	push	r0
 33e:	0f b6       	in	r0, 0x3f	; 63
 340:	0f 92       	push	r0
 342:	11 24       	eor	r1, r1
	TCNT0 = 0;						// reset the count TCNT0
 344:	16 bc       	out	0x26, r1	; 38
}
 346:	0f 90       	pop	r0
 348:	0f be       	out	0x3f, r0	; 63
 34a:	0f 90       	pop	r0
 34c:	1f 90       	pop	r1
 34e:	18 95       	reti

00000350 <_exit>:
 350:	f8 94       	cli

00000352 <__stop_program>:
 352:	ff cf       	rjmp	.-2      	; 0x352 <__stop_program>
